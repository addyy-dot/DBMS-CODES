-- Drop the trigger if it already exists (avoids duplication errors)
DROP TRIGGER IF EXISTS before_employee_update;

-- Drop the Employee table if it already exists (for clean re-execution)
DROP TABLE IF EXISTS Employee;

-- Create the Employee table with EmpID as Primary Key
CREATE TABLE Employee (
    EmpID INT PRIMARY KEY AUTO_INCREMENT,
    Name VARCHAR(100),
    Salary DECIMAL(10, 2)
);

-- Change the statement delimiter to allow defining the trigger
DELIMITER $$

-- Create a BEFORE UPDATE trigger to enforce salary limits
CREATE TRIGGER before_employee_update
BEFORE UPDATE ON Employee
FOR EACH ROW
BEGIN
    -- If the new salary is greater than 100000, set it to 100000
    IF NEW.Salary > 100000 THEN
        SET NEW.Salary = 100000;
    
    -- If the new salary is less than 25000, set it to 25000
    ELSEIF NEW.Salary < 25000 THEN
        SET NEW.Salary = 25000;
    END IF;
END$$

-- Reset the delimiter back to default
DELIMITER ;

-- Insert some sample employee records
INSERT INTO Employee (Name, Salary) VALUES 
('Alice', 30000),
('Bob', 95000),
('Charlie', 26000);

-- Update salaries using primary key (EmpID) to avoid safe update mode error
UPDATE Employee SET Salary = 120000 WHERE EmpID = 1;  -- Will be capped at 100000
UPDATE Employee SET Salary = 20000 WHERE EmpID = 2;   -- Will be raised to 25000
UPDATE Employee SET Salary = 50000 WHERE EmpID = 3;   -- Within range, remains unchanged

-- View the final updated Employee table
SELECT * FROM Employee;
