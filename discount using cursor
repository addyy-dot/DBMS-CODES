-- Create the database if it doesn't exist
CREATE DATABASE IF NOT EXISTS ProductDB;
USE ProductDB;

-- Create the Product table
CREATE TABLE IF NOT EXISTS Product (
    ProductID INT PRIMARY KEY,
    ProductName VARCHAR(100) NOT NULL,
    Price DECIMAL(10,2) CHECK (Price > 0)
);

-- Insert sample data into Product table
INSERT IGNORE INTO Product (ProductID, ProductName, Price) VALUES
(1, 'ProductA', 4500),
(2, 'ProductB', 8000),
(3, 'ProductC', 12000);

-- Drop the procedure if it exists
DROP PROCEDURE IF EXISTS CalculateDiscountWithCursor;

-- Create the procedure to calculate discounted price using cursor
DELIMITER //

CREATE PROCEDURE CalculateDiscountWithCursor()
BEGIN
    DECLARE p_id INT;
    DECLARE p_name VARCHAR(100);
    DECLARE p_price DECIMAL(10, 2);
    DECLARE p_discount DECIMAL(10, 2);
    DECLARE done INT DEFAULT 0;  -- Variable to handle cursor end
    DECLARE product_cursor CURSOR FOR
        SELECT ProductID, ProductName, Price FROM Product;

    DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = 1;

    OPEN product_cursor;

    read_loop: LOOP
        FETCH product_cursor INTO p_id, p_name, p_price;

        -- If all rows have been fetched, exit the loop
        IF done THEN
            LEAVE read_loop;
        END IF;

        -- Calculate discount based on price range
        IF p_price < 5000 THEN
            SET p_discount = p_price * 0.95;  -- 5% discount
        ELSEIF p_price BETWEEN 5000 AND 10000 THEN
            SET p_discount = p_price * 0.90;  -- 10% discount
        ELSE
            SET p_discount = p_price * 0.85;  -- 15% discount
        END IF;

        -- Output the results for each product
        SELECT p_id AS ProductID, p_name AS ProductName, p_price AS OriginalPrice, p_discount AS DiscountedPrice;
    END LOOP;

    CLOSE product_cursor;
END //

DELIMITER ;

-- Call the procedure to calculate and display the discounted prices
CALL CalculateDiscountWithCursor();
