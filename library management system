-- Create the Library Database if it doesn't exist
CREATE DATABASE IF NOT EXISTS LibraryDB;
USE LibraryDB;

-- Creating Department table with constraints (primary key, unique)
CREATE TABLE IF NOT EXISTS Department (
    DeptID INT PRIMARY KEY,  -- Primary key for Department table
    DeptName VARCHAR(50) NOT NULL UNIQUE  -- Unique constraint on Department name
);

-- Creating Users table, with foreign key reference to Department
CREATE TABLE IF NOT EXISTS Users (
    UserID INT PRIMARY KEY,  -- Primary key for Users table
    UserName VARCHAR(100) NOT NULL,  -- User's name with not null constraint
    DeptID INT,  -- Foreign key referencing DeptID from Department table
    FOREIGN KEY (DeptID) REFERENCES Department(DeptID)  -- Foreign key constraint
);

-- Creating Publishers table with unique constraint on PublisherName
CREATE TABLE IF NOT EXISTS Publishers (
    PublisherID INT PRIMARY KEY,  -- Primary key for Publishers table
    PublisherName VARCHAR(100) NOT NULL UNIQUE  -- Unique constraint on Publisher name
);

-- Creating Books table with foreign key references to Department and Publisher
CREATE TABLE IF NOT EXISTS Books (
    BookID INT PRIMARY KEY,  -- Primary key for Books table
    BookTitle VARCHAR(100) NOT NULL,  -- Book title with not null constraint
    Price DECIMAL(10,2) CHECK (Price > 0),  -- Price with a check constraint for positive values
    DeptID INT,  -- Foreign key referencing DeptID from Department table
    PublisherID INT,  -- Foreign key referencing PublisherID from Publishers table
    FOREIGN KEY (DeptID) REFERENCES Department(DeptID),  -- Foreign key constraint for DeptID
    FOREIGN KEY (PublisherID) REFERENCES Publishers(PublisherID)  -- Foreign key constraint for PublisherID
);

-- Creating BookIssues table with foreign keys referencing Books and Users
CREATE TABLE IF NOT EXISTS BookIssues (
    IssueID INT PRIMARY KEY,  -- Primary key for BookIssues table
    BookID INT,  -- Foreign key referencing BookID from Books table
    UserID INT,  -- Foreign key referencing UserID from Users table
    IssueDate DATE NOT NULL,  -- Issue date with not null constraint
    FOREIGN KEY (BookID) REFERENCES Books(BookID),  -- Foreign key constraint for BookID
    FOREIGN KEY (UserID) REFERENCES Users(UserID)  -- Foreign key constraint for UserID
);

-- Inserting sample data into Department table
INSERT IGNORE INTO Department (DeptID, DeptName) VALUES
(1, 'IT'),
(2, 'Computer'),
(3, 'Electronics');

-- Inserting sample data into Users table
INSERT IGNORE INTO Users (UserID, UserName, DeptID) VALUES
(101, 'Alice', 1),
(102, 'Bob', 2),
(103, 'Charlie', 1);

-- Inserting sample data into Publishers table
INSERT IGNORE INTO Publishers (PublisherID, PublisherName) VALUES
(1, 'PHI'),
(2, 'McGraw Hill');

-- Inserting sample data into Books table
INSERT IGNORE INTO Books (BookID, BookTitle, Price, DeptID, PublisherID) VALUES
(1, 'Database Systems', 5500, 2, 1),
(2, 'Digital Logic', 3000, 3, 2),
(3, 'Operating Systems', 4800, 1, 2);

-- Inserting sample data into BookIssues table
INSERT IGNORE INTO BookIssues (IssueID, BookID, UserID, IssueDate) VALUES
(1, 1, 102, '2015-06-10'),
(2, 3, 101, '2016-09-15'),
(3, 2, 103, '2015-01-25');

-- Check if the 'Edition' column exists in Books table
SELECT COUNT(*) 
FROM information_schema.columns 
WHERE table_name = 'Books' AND column_name = 'Edition';

-- If the result is 0 (column does not exist), run the following query manually:
-- ALTER TABLE Books ADD COLUMN Edition INT DEFAULT 1;

-- Alter Users table to modify UserName column size
ALTER TABLE Users MODIFY COLUMN UserName VARCHAR(150);

-- Re-add PublisherName to Publishers table if needed
ALTER TABLE Publishers DROP COLUMN PublisherName;  -- Drop existing PublisherName column
ALTER TABLE Publishers ADD COLUMN PublisherName VARCHAR(100);  -- Add PublisherName column again
UPDATE Publishers SET PublisherName = 'PHI' WHERE PublisherID = 1;  -- Update PublisherName for ID 1
UPDATE Publishers SET PublisherName = 'McGraw Hill' WHERE PublisherID = 2;  -- Update PublisherName for ID 2

-- Queries:

-- i. Total number of books in the library
SELECT COUNT(*) AS TotalBooks FROM Books;

-- ii. Total number of books issued in year 2015
SELECT COUNT(*) AS BooksIssued2015 FROM BookIssues WHERE YEAR(IssueDate) = 2015;

-- iii. Details of books having price more than 5000
SELECT * FROM Books WHERE Price > 5000;

-- iv. Details of all users in the IT Department
SELECT * FROM Users WHERE DeptID = (SELECT DeptID FROM Department WHERE DeptName = 'IT');

-- v. Details of books of Computer Department published by PHI
SELECT * FROM Books 
WHERE DeptID = (SELECT DeptID FROM Department WHERE DeptName = 'Computer')
AND PublisherID = (SELECT PublisherID FROM Publishers WHERE PublisherName = 'PHI');
